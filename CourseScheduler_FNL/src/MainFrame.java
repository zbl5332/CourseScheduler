
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Base64;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author ziyulin
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    private String currentSemester;
    private String author;
    private String project;

    public MainFrame() {
        initComponents();
        checkData();
        rebuildSemesterComboBoxes();
        rebuildCourseComboBoxes();
        rebuildStudentComboBoxes();
        rebuildClassComboBoxes();
    }

    public void rebuildSemesterComboBoxes() {
        ArrayList<String> semesters = SemesterQueries.getSemesterList();
        currentSemesterComboBox.setModel(new javax.swing.DefaultComboBoxModel(semesters.toArray()));
        if (semesters.size() > 0) {
            currentSemesterLabel.setText(semesters.get(0));
            currentSemester = semesters.get(0);
        } else {
            currentSemesterLabel.setText("None");
            currentSemester = "None";
        }
    }
    
    private void rebuildCourseComboBoxes()
    {
        
        addCourseCodeComboBox.setModel(new javax.swing.DefaultComboBoxModel(CourseQueries.getAllCourseCodes().toArray()));
        
    }
    
    private void rebuildClassComboBoxes()
    {
        addSelectClassComboBox.setModel(new javax.swing.DefaultComboBoxModel(ClassQueries.getAllCourseCodes(currentSemester).toArray()));
        dispalyChooseClassComboBox.setModel(new javax.swing.DefaultComboBoxModel(ClassQueries.getAllCourseCodes(currentSemester).toArray()));
        adminDropClassChooseComboBox.setModel(new javax.swing.DefaultComboBoxModel(ClassQueries.getAllCourseCodes(currentSemester).toArray()));
        studentDropClassChooseClassComboBox.setModel(new javax.swing.DefaultComboBoxModel(ClassQueries.getAllCourseCodes(currentSemester).toArray()));
    }
    private void rebuildStudentComboBoxes()
    {
        ArrayList<StudentEntry> students = StudentQueries.getAllStudents();
        String[] nameArr = new String[students.size()];
        int i = 0;
        for (StudentEntry student : students)
        {
            nameArr[i] = student.getLastName() + ", " + student.getFirstName() + " " + student.getStudentID();
            i++;
        }

        addSelectStudentComboBox.setModel(new javax.swing.DefaultComboBoxModel(nameArr));
        selectStudentComboBox.setModel(new javax.swing.DefaultComboBoxModel(nameArr));
        dropChooseStudentComboBox.setModel(new javax.swing.DefaultComboBoxModel(nameArr));
        studentDropClassChooseStudentComboBox.setModel(new javax.swing.DefaultComboBoxModel(nameArr));
       
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        adminPanel = new javax.swing.JPanel();
        adminTabbedPane = new javax.swing.JTabbedPane();
        addSemesterPanel = new javax.swing.JPanel();
        addSemesterLabel = new javax.swing.JLabel();
        addSemesterTextfield = new javax.swing.JTextField();
        addSemesterSubmitButton = new javax.swing.JButton();
        addSemesterStatusLabel = new javax.swing.JLabel();
        addCoursePanel = new javax.swing.JPanel();
        addCourseCodeLabel = new javax.swing.JLabel();
        addCourseCodeTextfield = new javax.swing.JTextField();
        addCourseDescriptionLabel = new javax.swing.JLabel();
        addCourseDescriptionTextfield = new javax.swing.JTextField();
        addCourseSubmitButton = new javax.swing.JButton();
        addCourseStatusLabel = new javax.swing.JLabel();
        addClassPanel = new javax.swing.JPanel();
        addClassCodeLabel = new javax.swing.JLabel();
        addClassSeatsLabel = new javax.swing.JLabel();
        addCourseCodeComboBox = new javax.swing.JComboBox<>();
        addSeatsSpinner = new javax.swing.JSpinner();
        addClassSubmitButton = new javax.swing.JButton();
        addClassAddedLabel = new javax.swing.JLabel();
        addStudentPanel = new javax.swing.JPanel();
        addStudentIDLabel = new javax.swing.JLabel();
        addFirstNameLabel = new javax.swing.JLabel();
        addLastNameLabel = new javax.swing.JLabel();
        addStudentIDTextfield = new javax.swing.JTextField();
        addFirstNameTextfield = new javax.swing.JTextField();
        addLastNameTextfield = new javax.swing.JTextField();
        addStudentSubmitButton = new javax.swing.JButton();
        addStudentStatusLabel = new javax.swing.JLabel();
        displayClassListPanel = new javax.swing.JPanel();
        chooseClassLabel = new javax.swing.JLabel();
        dispalyChooseClassComboBox = new javax.swing.JComboBox<>();
        displayClassListDisplayButton = new javax.swing.JButton();
        scheduledStudentInClassLabel = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        scheduledStudentsClassTable = new javax.swing.JTable();
        waitlistedStudentsClassLabel = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        waitlistedStudentInWaitlistOrderTable = new javax.swing.JTable();
        dropStudentPanel = new javax.swing.JPanel();
        dropChooseStudentLabel = new javax.swing.JLabel();
        dropChooseStudentComboBox = new javax.swing.JComboBox<>();
        dropStudentSubmitButton = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        dropStudentResultTextArea = new javax.swing.JTextArea();
        dropClassPanel = new javax.swing.JPanel();
        adminDropClassChooseLabel = new javax.swing.JLabel();
        adminDropClassChooseComboBox = new javax.swing.JComboBox<>();
        adminDropClassSubmitButton = new javax.swing.JButton();
        jScrollPane9 = new javax.swing.JScrollPane();
        adminDropClassResultTextArea = new javax.swing.JTextArea();
        studentPanel = new javax.swing.JPanel();
        studentDropClassPanel = new javax.swing.JTabbedPane();
        displayClassesPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        displayCoursesTextarea = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        displayCoursesTable = new javax.swing.JTable();
        displayClassDisplayButton = new javax.swing.JButton();
        scheduleClassPanel = new javax.swing.JPanel();
        addSelectClassLabel = new javax.swing.JLabel();
        addSelectStudentLabel = new javax.swing.JLabel();
        addSelectClassComboBox = new javax.swing.JComboBox<>();
        addSelectStudentComboBox = new javax.swing.JComboBox<>();
        addScheduleClassSubmitButton = new javax.swing.JButton();
        addScheduleClassScheduledLabel = new javax.swing.JLabel();
        displayStudentSchedulePanel = new javax.swing.JPanel();
        selectStudentLabel = new javax.swing.JLabel();
        selectStudentComboBox = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        displayStudentCoursesTextarea = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        displayCourseStatusTable = new javax.swing.JTable();
        displayScheduleDisplayButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        studentDropClassChooseStudentPanel = new javax.swing.JLabel();
        studentDropClassChooseStudentComboBox = new javax.swing.JComboBox<>();
        studentDropClassChooseClassPanel = new javax.swing.JLabel();
        studentDropClassChooseClassComboBox = new javax.swing.JComboBox<>();
        studentDropClassSubmitButton = new javax.swing.JButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        studentDropClassStatusTextArea = new javax.swing.JTextArea();
        currentSemesterArea = new javax.swing.JLabel();
        currentSemesterLabel = new javax.swing.JLabel();
        currentSemesterComboBox = new javax.swing.JComboBox<>();
        changeSemesterButton = new javax.swing.JButton();
        aboutButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 1, 30)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 153));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Course Scheduler");

        addSemesterLabel.setText("Semester Name:");

        addSemesterTextfield.setColumns(20);

        addSemesterSubmitButton.setText("Submit");
        addSemesterSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSemesterSubmitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addSemesterPanelLayout = new javax.swing.GroupLayout(addSemesterPanel);
        addSemesterPanel.setLayout(addSemesterPanelLayout);
        addSemesterPanelLayout.setHorizontalGroup(
            addSemesterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addSemesterPanelLayout.createSequentialGroup()
                .addGroup(addSemesterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addSemesterPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(addSemesterLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(addSemesterTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(addSemesterPanelLayout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(addSemesterSubmitButton))
                    .addGroup(addSemesterPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(addSemesterStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(401, Short.MAX_VALUE))
        );
        addSemesterPanelLayout.setVerticalGroup(
            addSemesterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addSemesterPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addSemesterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addSemesterLabel)
                    .addComponent(addSemesterTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(addSemesterSubmitButton)
                .addGap(18, 18, 18)
                .addComponent(addSemesterStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(164, Short.MAX_VALUE))
        );

        adminTabbedPane.addTab("Add Semester", addSemesterPanel);

        addCourseCodeLabel.setText("Course Code:");

        addCourseCodeTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCourseCodeTextfieldActionPerformed(evt);
            }
        });

        addCourseDescriptionLabel.setText("Course Description:");

        addCourseSubmitButton.setText("Submit");
        addCourseSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCourseSubmitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addCoursePanelLayout = new javax.swing.GroupLayout(addCoursePanel);
        addCoursePanel.setLayout(addCoursePanelLayout);
        addCoursePanelLayout.setHorizontalGroup(
            addCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addCoursePanelLayout.createSequentialGroup()
                .addGroup(addCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addCoursePanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(addCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addCourseDescriptionLabel)
                            .addComponent(addCourseCodeLabel))
                        .addGap(18, 18, 18)
                        .addGroup(addCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addCourseCodeTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addCourseDescriptionTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(addCoursePanelLayout.createSequentialGroup()
                        .addGap(147, 147, 147)
                        .addComponent(addCourseSubmitButton))
                    .addGroup(addCoursePanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(addCourseStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(390, Short.MAX_VALUE))
        );
        addCoursePanelLayout.setVerticalGroup(
            addCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addCoursePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addCourseCodeLabel)
                    .addComponent(addCourseCodeTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addCourseDescriptionLabel)
                    .addComponent(addCourseDescriptionTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(addCourseSubmitButton)
                .addGap(18, 18, 18)
                .addComponent(addCourseStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(125, Short.MAX_VALUE))
        );

        adminTabbedPane.addTab("Add Course", addCoursePanel);

        addClassCodeLabel.setText("Course Code:");

        addClassSeatsLabel.setText("Seats:");

        addCourseCodeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        addClassSubmitButton.setText("Submit");
        addClassSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addClassSubmitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addClassPanelLayout = new javax.swing.GroupLayout(addClassPanel);
        addClassPanel.setLayout(addClassPanelLayout);
        addClassPanelLayout.setHorizontalGroup(
            addClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addClassPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(addClassAddedLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(addClassPanelLayout.createSequentialGroup()
                        .addGroup(addClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addClassCodeLabel)
                            .addComponent(addClassSeatsLabel))
                        .addGap(18, 18, 18)
                        .addGroup(addClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addClassSubmitButton)
                            .addComponent(addSeatsSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addCourseCodeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(532, Short.MAX_VALUE))
        );
        addClassPanelLayout.setVerticalGroup(
            addClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addClassPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addCourseCodeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addClassCodeLabel))
                .addGap(18, 18, 18)
                .addGroup(addClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addSeatsSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addClassSeatsLabel))
                .addGap(18, 18, 18)
                .addComponent(addClassSubmitButton)
                .addGap(18, 18, 18)
                .addComponent(addClassAddedLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(125, Short.MAX_VALUE))
        );

        adminTabbedPane.addTab("Add Class", addClassPanel);

        addStudentIDLabel.setText("Student ID:");

        addFirstNameLabel.setText("First Name:");

        addLastNameLabel.setText("Last Name:");

        addStudentIDTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStudentIDTextfieldActionPerformed(evt);
            }
        });

        addFirstNameTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFirstNameTextfieldActionPerformed(evt);
            }
        });

        addStudentSubmitButton.setText("Submit");
        addStudentSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStudentSubmitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addStudentPanelLayout = new javax.swing.GroupLayout(addStudentPanel);
        addStudentPanel.setLayout(addStudentPanelLayout);
        addStudentPanelLayout.setHorizontalGroup(
            addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addStudentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(addStudentPanelLayout.createSequentialGroup()
                        .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addFirstNameLabel)
                            .addComponent(addStudentIDLabel))
                        .addGap(18, 18, 18)
                        .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(addStudentIDTextfield)
                            .addComponent(addFirstNameTextfield, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)))
                    .addGroup(addStudentPanelLayout.createSequentialGroup()
                        .addComponent(addLastNameLabel)
                        .addGap(18, 18, 18)
                        .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addStudentSubmitButton)
                            .addComponent(addLastNameTextfield, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)))
                    .addComponent(addStudentStatusLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(504, Short.MAX_VALUE))
        );
        addStudentPanelLayout.setVerticalGroup(
            addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addStudentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addStudentIDLabel)
                    .addComponent(addStudentIDTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addFirstNameLabel)
                    .addComponent(addFirstNameTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addLastNameLabel)
                    .addComponent(addLastNameTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(addStudentSubmitButton)
                .addGap(18, 18, 18)
                .addComponent(addStudentStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 80, Short.MAX_VALUE))
        );

        adminTabbedPane.addTab("Add Student", addStudentPanel);

        chooseClassLabel.setText("Choose Class:");

        dispalyChooseClassComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        dispalyChooseClassComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dispalyChooseClassComboBoxActionPerformed(evt);
            }
        });

        displayClassListDisplayButton.setText("Display");
        displayClassListDisplayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayClassListDisplayButtonActionPerformed(evt);
            }
        });

        scheduledStudentInClassLabel.setText("Scheduled Students in the Class");

        scheduledStudentsClassTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Last Name", "First Name", "StudentID"
            }
        ));
        jScrollPane5.setViewportView(scheduledStudentsClassTable);

        waitlistedStudentsClassLabel.setText("Waitlisted Students in the Class in Waitlist Order");

        waitlistedStudentInWaitlistOrderTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Last Name", "First Name", "StudentID"
            }
        ));
        jScrollPane6.setViewportView(waitlistedStudentInWaitlistOrderTable);

        javax.swing.GroupLayout displayClassListPanelLayout = new javax.swing.GroupLayout(displayClassListPanel);
        displayClassListPanel.setLayout(displayClassListPanelLayout);
        displayClassListPanelLayout.setHorizontalGroup(
            displayClassListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displayClassListPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(displayClassListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane5)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(displayClassListPanelLayout.createSequentialGroup()
                        .addComponent(chooseClassLabel)
                        .addGap(18, 18, 18)
                        .addComponent(dispalyChooseClassComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(displayClassListDisplayButton))
                    .addComponent(scheduledStudentInClassLabel)
                    .addComponent(waitlistedStudentsClassLabel))
                .addContainerGap(292, Short.MAX_VALUE))
        );
        displayClassListPanelLayout.setVerticalGroup(
            displayClassListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displayClassListPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(displayClassListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dispalyChooseClassComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chooseClassLabel)
                    .addComponent(displayClassListDisplayButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scheduledStudentInClassLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(waitlistedStudentsClassLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        adminTabbedPane.addTab("Display Class List", displayClassListPanel);

        dropChooseStudentLabel.setText("Choose Student:");

        dropChooseStudentComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        dropStudentSubmitButton.setText("Submit");
        dropStudentSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropStudentSubmitButtonActionPerformed(evt);
            }
        });

        dropStudentResultTextArea.setColumns(20);
        dropStudentResultTextArea.setRows(5);
        jScrollPane7.setViewportView(dropStudentResultTextArea);

        javax.swing.GroupLayout dropStudentPanelLayout = new javax.swing.GroupLayout(dropStudentPanel);
        dropStudentPanel.setLayout(dropStudentPanelLayout);
        dropStudentPanelLayout.setHorizontalGroup(
            dropStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dropStudentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dropStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 448, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(dropStudentPanelLayout.createSequentialGroup()
                        .addComponent(dropChooseStudentLabel)
                        .addGap(18, 18, 18)
                        .addGroup(dropStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dropStudentSubmitButton)
                            .addComponent(dropChooseStudentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(296, Short.MAX_VALUE))
        );
        dropStudentPanelLayout.setVerticalGroup(
            dropStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dropStudentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dropStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dropChooseStudentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dropChooseStudentLabel))
                .addGap(18, 18, 18)
                .addComponent(dropStudentSubmitButton)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        adminTabbedPane.addTab("Drop Student", dropStudentPanel);

        adminDropClassChooseLabel.setText("Choose Class:");

        adminDropClassChooseComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        adminDropClassSubmitButton.setText("Submit");
        adminDropClassSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adminDropClassSubmitButtonActionPerformed(evt);
            }
        });

        adminDropClassResultTextArea.setColumns(20);
        adminDropClassResultTextArea.setRows(5);
        jScrollPane9.setViewportView(adminDropClassResultTextArea);

        javax.swing.GroupLayout dropClassPanelLayout = new javax.swing.GroupLayout(dropClassPanel);
        dropClassPanel.setLayout(dropClassPanelLayout);
        dropClassPanelLayout.setHorizontalGroup(
            dropClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dropClassPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dropClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(dropClassPanelLayout.createSequentialGroup()
                        .addComponent(adminDropClassChooseLabel)
                        .addGap(18, 18, 18)
                        .addGroup(dropClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(adminDropClassSubmitButton)
                            .addComponent(adminDropClassChooseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(314, Short.MAX_VALUE))
        );
        dropClassPanelLayout.setVerticalGroup(
            dropClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dropClassPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dropClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(adminDropClassChooseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(adminDropClassChooseLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(adminDropClassSubmitButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        adminTabbedPane.addTab("Drop Class", dropClassPanel);

        javax.swing.GroupLayout adminPanelLayout = new javax.swing.GroupLayout(adminPanel);
        adminPanel.setLayout(adminPanelLayout);
        adminPanelLayout.setHorizontalGroup(
            adminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(adminTabbedPane)
        );
        adminPanelLayout.setVerticalGroup(
            adminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, adminPanelLayout.createSequentialGroup()
                .addComponent(adminTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Admin", adminPanel);

        displayCoursesTextarea.setColumns(20);
        displayCoursesTextarea.setRows(5);
        jScrollPane1.setViewportView(displayCoursesTextarea);

        displayCoursesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Course Code", "Description", "Seats"
            }
        ));
        jScrollPane2.setViewportView(displayCoursesTable);

        displayClassDisplayButton.setText("Display");
        displayClassDisplayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayClassDisplayButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout displayClassesPanelLayout = new javax.swing.GroupLayout(displayClassesPanel);
        displayClassesPanel.setLayout(displayClassesPanelLayout);
        displayClassesPanelLayout.setHorizontalGroup(
            displayClassesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displayClassesPanelLayout.createSequentialGroup()
                .addGroup(displayClassesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(displayClassesPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(displayClassesPanelLayout.createSequentialGroup()
                        .addGap(162, 162, 162)
                        .addComponent(displayClassDisplayButton))
                    .addGroup(displayClassesPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(329, Short.MAX_VALUE))
        );
        displayClassesPanelLayout.setVerticalGroup(
            displayClassesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displayClassesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                .addGap(5, 5, 5)
                .addComponent(displayClassDisplayButton))
        );

        studentDropClassPanel.addTab("Display Classes", displayClassesPanel);

        scheduleClassPanel.setToolTipText("");

        addSelectClassLabel.setText("Select Class:");

        addSelectStudentLabel.setText("Select Student:");

        addSelectClassComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        addSelectClassComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSelectClassComboBoxActionPerformed(evt);
            }
        });

        addSelectStudentComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        addScheduleClassSubmitButton.setText("Submit");
        addScheduleClassSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addScheduleClassSubmitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout scheduleClassPanelLayout = new javax.swing.GroupLayout(scheduleClassPanel);
        scheduleClassPanel.setLayout(scheduleClassPanelLayout);
        scheduleClassPanelLayout.setHorizontalGroup(
            scheduleClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(scheduleClassPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(scheduleClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(addScheduleClassScheduledLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(scheduleClassPanelLayout.createSequentialGroup()
                        .addGroup(scheduleClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addSelectClassLabel)
                            .addComponent(addSelectStudentLabel))
                        .addGap(27, 27, 27)
                        .addGroup(scheduleClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(addScheduleClassSubmitButton)
                            .addComponent(addSelectClassComboBox, 0, 151, Short.MAX_VALUE)
                            .addComponent(addSelectStudentComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(471, Short.MAX_VALUE))
        );
        scheduleClassPanelLayout.setVerticalGroup(
            scheduleClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(scheduleClassPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(scheduleClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addSelectClassLabel)
                    .addComponent(addSelectClassComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(scheduleClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addSelectStudentLabel)
                    .addComponent(addSelectStudentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(addScheduleClassSubmitButton)
                .addGap(18, 18, 18)
                .addComponent(addScheduleClassScheduledLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(126, Short.MAX_VALUE))
        );

        studentDropClassPanel.addTab("Schedule Class", scheduleClassPanel);

        selectStudentLabel.setText("Select Student:");

        selectStudentComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        selectStudentComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectStudentComboBoxActionPerformed(evt);
            }
        });

        displayStudentCoursesTextarea.setColumns(20);
        displayStudentCoursesTextarea.setRows(5);
        jScrollPane3.setViewportView(displayStudentCoursesTextarea);

        displayCourseStatusTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Course Code", "Status"
            }
        ));
        jScrollPane4.setViewportView(displayCourseStatusTable);

        displayScheduleDisplayButton.setText("Display");
        displayScheduleDisplayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayScheduleDisplayButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout displayStudentSchedulePanelLayout = new javax.swing.GroupLayout(displayStudentSchedulePanel);
        displayStudentSchedulePanel.setLayout(displayStudentSchedulePanelLayout);
        displayStudentSchedulePanelLayout.setHorizontalGroup(
            displayStudentSchedulePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displayStudentSchedulePanelLayout.createSequentialGroup()
                .addGroup(displayStudentSchedulePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(displayStudentSchedulePanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(displayStudentSchedulePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(displayStudentSchedulePanelLayout.createSequentialGroup()
                                .addComponent(selectStudentLabel)
                                .addGap(18, 18, 18)
                                .addComponent(selectStudentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 429, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(displayStudentSchedulePanelLayout.createSequentialGroup()
                        .addGap(149, 149, 149)
                        .addComponent(displayScheduleDisplayButton)))
                .addContainerGap(309, Short.MAX_VALUE))
        );
        displayStudentSchedulePanelLayout.setVerticalGroup(
            displayStudentSchedulePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displayStudentSchedulePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(displayStudentSchedulePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectStudentLabel)
                    .addComponent(selectStudentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addComponent(displayScheduleDisplayButton))
        );

        studentDropClassPanel.addTab("Display Student Schedule", displayStudentSchedulePanel);

        studentDropClassChooseStudentPanel.setText("Choose Student:");

        studentDropClassChooseStudentComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        studentDropClassChooseClassPanel.setText("Choose Class:");

        studentDropClassChooseClassComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        studentDropClassSubmitButton.setText("Submit");
        studentDropClassSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentDropClassSubmitButtonActionPerformed(evt);
            }
        });

        studentDropClassStatusTextArea.setColumns(20);
        studentDropClassStatusTextArea.setRows(5);
        jScrollPane8.setViewportView(studentDropClassStatusTextArea);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 455, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(studentDropClassSubmitButton)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(studentDropClassChooseStudentPanel)
                                .addGap(18, 18, 18)
                                .addComponent(studentDropClassChooseStudentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(studentDropClassChooseClassPanel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(studentDropClassChooseClassComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(283, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(studentDropClassChooseStudentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(studentDropClassChooseStudentPanel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(studentDropClassChooseClassPanel)
                    .addComponent(studentDropClassChooseClassComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(studentDropClassSubmitButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        studentDropClassPanel.addTab("Drop Class", jPanel1);

        javax.swing.GroupLayout studentPanelLayout = new javax.swing.GroupLayout(studentPanel);
        studentPanel.setLayout(studentPanelLayout);
        studentPanelLayout.setHorizontalGroup(
            studentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(studentDropClassPanel))
        );
        studentPanelLayout.setVerticalGroup(
            studentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(studentDropClassPanel)
        );

        jTabbedPane1.addTab("Student", studentPanel);

        currentSemesterArea.setFont(new java.awt.Font("Comic Sans MS", 1, 16)); // NOI18N
        currentSemesterArea.setText("Current Semester: ");

        currentSemesterLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 16)); // NOI18N
        currentSemesterLabel.setText("           ");

        currentSemesterComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        changeSemesterButton.setText("Change Semester");
        changeSemesterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeSemesterButtonActionPerformed(evt);
            }
        });

        aboutButton.setText("About");
        aboutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(currentSemesterArea)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(currentSemesterLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(currentSemesterComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(changeSemesterButton)
                                .addGap(31, 31, 31)
                                .addComponent(aboutButton)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(currentSemesterArea)
                    .addComponent(currentSemesterLabel)
                    .addComponent(currentSemesterComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(changeSemesterButton)
                    .addComponent(aboutButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void aboutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutButtonActionPerformed
        // TODO add your handling code here:
        // display about information.
        JOptionPane.showMessageDialog(null, "Author: " + author + " Project: " + project);
    }//GEN-LAST:event_aboutButtonActionPerformed

    private void addSemesterSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSemesterSubmitButtonActionPerformed
        String semester = addSemesterTextfield.getText();
        SemesterQueries.addSemester(semester);
        addSemesterStatusLabel.setText("Semester " + semester + " has been added.");
        rebuildSemesterComboBoxes();
    }//GEN-LAST:event_addSemesterSubmitButtonActionPerformed

    private void addCourseCodeTextfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCourseCodeTextfieldActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_addCourseCodeTextfieldActionPerformed

    private void addCourseSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCourseSubmitButtonActionPerformed
        // TODO add your handling code here:
        if (addCourseCodeTextfield.getText().length() > 0 && addCourseDescriptionTextfield.getText().length() > 0) {
            CourseEntry newCourseEntry = new CourseEntry(addCourseCodeTextfield.getText(), addCourseDescriptionTextfield.getText());
            CourseQueries.addCourse(newCourseEntry);
            addCourseStatusLabel.setText(addCourseCodeTextfield.getText() + " has been added.");
            rebuildCourseComboBoxes();
    }//GEN-LAST:event_addCourseSubmitButtonActionPerformed
    }
        
    private void displayClassDisplayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayClassDisplayButtonActionPerformed
        // TODO add your handling code here:
        ArrayList<ClassDescription> courses = MultiTableQueries.getAllClassDescriptions(currentSemester);
        displayCoursesTextarea.setText("Course Code  Description  Seats\n");
        for (ClassDescription course:courses){
            displayCoursesTextarea.append(course.getCourseCode() + "  " + course.getDescription() + "  "  + course.getSeats()+ "\n");            
        }
        DefaultTableModel currTableMod = (DefaultTableModel)displayCoursesTable.getModel();
        currTableMod.setNumRows(0);
        Object[] rowData = new Object[3];
        for (ClassDescription c : courses)
        {
            rowData[0] = c.getCourseCode();
            rowData[1] = c.getDescription();
            rowData[2] = c.getSeats();
            currTableMod.addRow(rowData);
        }
    }//GEN-LAST:event_displayClassDisplayButtonActionPerformed

    private void addStudentSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addStudentSubmitButtonActionPerformed
        // TODO add your handling code here:
        if (addStudentIDTextfield.getText().length() > 0 && addFirstNameTextfield.getText().length() > 0 && addLastNameTextfield.getText().length() > 0) {
            StudentEntry newStudent = new StudentEntry(addStudentIDTextfield.getText(), addFirstNameTextfield.getText(), addLastNameTextfield.getText());
            StudentQueries.addStudent(newStudent);
            addStudentStatusLabel.setText(addLastNameTextfield.getText() + ", " + addFirstNameTextfield.getText() + " has been added");
            rebuildStudentComboBoxes();
        }
    }//GEN-LAST:event_addStudentSubmitButtonActionPerformed

    private void addFirstNameTextfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFirstNameTextfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addFirstNameTextfieldActionPerformed

    private void addStudentIDTextfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addStudentIDTextfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addStudentIDTextfieldActionPerformed

    private void addClassSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addClassSubmitButtonActionPerformed
        // TODO add your handling code here:
        String selectedCourseCode = addCourseCodeComboBox.getSelectedItem().toString();
        int numberOfSeats = (int) addSeatsSpinner.getValue();

        // Check if a valid course is selected and the seat number is positive
        if (addCourseCodeComboBox.getSelectedItem() != null && (int) addSeatsSpinner.getValue() > 0) {
            ClassEntry newClassEntry = new ClassEntry(currentSemester, selectedCourseCode, numberOfSeats);
            
            ClassQueries.addClass(newClassEntry);
            addClassAddedLabel.setText("Class for " + addCourseCodeComboBox.getSelectedItem() + " with " + (int)addSeatsSpinner.getValue() + " seats added.");
            addSeatsSpinner.setValue(0);
            //Rebuild related combo boxes
            rebuildClassComboBoxes(); 
            displayClassDisplayButtonActionPerformed(null);
        } else {
            // Handle invalid input or selection
            addClassAddedLabel.setText("Please select a valid course and seat number.");
        }
        
        
    }//GEN-LAST:event_addClassSubmitButtonActionPerformed

    private void addScheduleClassSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addScheduleClassSubmitButtonActionPerformed
        // TODO add your handling code here:
        String status = "";
        String StuInfo = addSelectStudentComboBox.getSelectedItem().toString();
        
        String[] Stu = StuInfo.split(" ");
        String studentName = Stu[0] + " " + Stu[1];
        String studentID = Stu[2];
        
        if (ClassQueries.getClassSeats(currentSemester, (String)addSelectClassComboBox.getSelectedItem()) > ScheduleQueries.getScheduledStudentCount(currentSemester, (String)addSelectClassComboBox.getSelectedItem()))
        {
            status = "Scheduled";
            addScheduleClassScheduledLabel.setText(studentName + " has been scheduled for " + (String)addSelectClassComboBox.getSelectedItem());
        } else {
            status = "Waitlisted";
            addScheduleClassScheduledLabel.setText(studentName + " has been waitlisted for " + (String)addSelectClassComboBox.getSelectedItem());
        }
        ScheduleEntry newEntry = new ScheduleEntry(currentSemester, (String)addSelectClassComboBox.getSelectedItem(), studentID, status, new java.sql.Timestamp(System.currentTimeMillis()));
        ScheduleQueries.addScheduleEntry(newEntry);
        displayScheduleDisplayButtonActionPerformed(null);
        displayClassListDisplayButtonActionPerformed(null);
    }//GEN-LAST:event_addScheduleClassSubmitButtonActionPerformed

    private void displayScheduleDisplayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayScheduleDisplayButtonActionPerformed
        // TODO add your handling code here:
        String StuInfo = selectStudentComboBox.getSelectedItem().toString();
        String[] Stu = StuInfo.split(" ");
        String studentName = Stu[0] + " " + Stu[1];
        String studentID = Stu[2];
        
        ArrayList<ScheduleEntry> schedule = ScheduleQueries.getScheduleByStudent(currentSemester, studentID);
        displayStudentCoursesTextarea.setText("Course Code  Status\n");
        for (ScheduleEntry s:schedule){
            displayStudentCoursesTextarea.append(s.getCourseCode() + "  " + s.getStatus() + "\n");}
        
        DefaultTableModel currTableMod = (DefaultTableModel)displayCourseStatusTable.getModel();
        currTableMod.setNumRows(0);
        Object[] rowData = new Object[3];
        for (ScheduleEntry s : schedule)
        {
            rowData[0] = s.getCourseCode();
            rowData[1] = s.getStatus();
            currTableMod.addRow(rowData);
        }
        
    }//GEN-LAST:event_displayScheduleDisplayButtonActionPerformed

    private void changeSemesterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeSemesterButtonActionPerformed
        // TODO add your handling code here:
        currentSemester = (String)currentSemesterComboBox.getSelectedItem();
        currentSemesterLabel.setText(currentSemester);
        rebuildCourseComboBoxes();
        rebuildClassComboBoxes();
        displayClassDisplayButtonActionPerformed(null);
        //displayScheduleDisplayButtonActionPerformed(null);
    }//GEN-LAST:event_changeSemesterButtonActionPerformed

    private void addSelectClassComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSelectClassComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addSelectClassComboBoxActionPerformed

    private void selectStudentComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectStudentComboBoxActionPerformed
        // TODO add your handling code here:
        displayScheduleDisplayButtonActionPerformed(null);
    }//GEN-LAST:event_selectStudentComboBoxActionPerformed

    private void displayClassListDisplayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayClassListDisplayButtonActionPerformed
        // TODO add your handling code here:
        String selectedCourseCode = (String) dispalyChooseClassComboBox.getSelectedItem();
        ArrayList<StudentEntry> scheduledStudents = MultiTableQueries.getScheduledStudentsByClass(currentSemester, selectedCourseCode);
        ArrayList<StudentEntry> waitlistedStudents = MultiTableQueries.getWaitlistedStudentsByClass(currentSemester, selectedCourseCode);

        DefaultTableModel scheduledTableMod = (DefaultTableModel) scheduledStudentsClassTable.getModel();
        scheduledTableMod.setNumRows(0);
        Object[] rowData = new Object[3];
        for (StudentEntry s : scheduledStudents) {
            rowData[0] = s.getLastName();
            rowData[1] = s.getFirstName();
            rowData[2] = s.getStudentID();
            scheduledTableMod.addRow(rowData);
        }

        DefaultTableModel waitlistedTableMod = (DefaultTableModel) waitlistedStudentInWaitlistOrderTable.getModel();
        waitlistedTableMod.setNumRows(0);
        for (StudentEntry s : waitlistedStudents) {
            rowData[0] = s.getLastName();
            rowData[1] = s.getFirstName();
            rowData[2] = s.getStudentID();
            waitlistedTableMod.addRow(rowData);
        }

    }//GEN-LAST:event_displayClassListDisplayButtonActionPerformed

    private void dropStudentSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropStudentSubmitButtonActionPerformed
        // TODO add your handling code here:
        dropStudentResultTextArea.setText("");
        String StuInfo = dropChooseStudentComboBox.getSelectedItem().toString();
        String[] Stu = StuInfo.split(" ");
        String studentName = Stu[0] + " " + Stu[1];
        String studentID = Stu[2];
        
        StudentEntry selectedStudent = StudentQueries.getStudent(studentID);
        dropStudentResultTextArea.append((String)StuInfo + " has been dropped from the list of students.\n");

        for (String currSem : SemesterQueries.getSemesterList())
        {
            String droppedClasses = "";
            String scheduledClasses = "";
            for (ScheduleEntry currentEntry : ScheduleQueries.getScheduleByStudent(currSem, selectedStudent.getStudentID()))
            {
                ScheduleQueries.dropStudentScheduleByCourse(currSem, selectedStudent.getStudentID(), currentEntry.getCourseCode());
                droppedClasses += ((String)dropChooseStudentComboBox.getSelectedItem() + (currentEntry.getStatus().equals("Waitlisted") ? " has been dropped from the waitlist for ": " has been dropped from ") + currentEntry.getCourseCode() + "\n");
                
                ArrayList<ScheduleEntry> waitlistedStudents = ScheduleQueries.getWaitlistedStudentsByClass(currSem, currentEntry.getCourseCode());
                if (!waitlistedStudents.isEmpty())
                {
                    ScheduleQueries.updateScheduleEntry(waitlistedStudents.get(0));
                    StudentEntry updatedStudent = StudentQueries.getStudent(waitlistedStudents.get(0).getStudentID());
                    scheduledClasses += updatedStudent.getLastName() + ", " + updatedStudent.getFirstName() + " " + waitlistedStudents.get(0).getStudentID() + " has been scheduled into " + waitlistedStudents.get(0).getCourseCode() + "\n";
                }
            }
            if (!droppedClasses.isEmpty() || !scheduledClasses.isEmpty())
            {
                dropStudentResultTextArea.append("\n"+"For Semester: " + currSem + "\n");
                dropStudentResultTextArea.append(droppedClasses);
                dropStudentResultTextArea.append(scheduledClasses);
            }
        }
        dropStudentResultTextArea.append("\n"+ studentName + " has been removed from all the student comboboxes.\n\n");
        StudentQueries.dropStudent(studentID);
        rebuildStudentComboBoxes();
        displayClassListDisplayButtonActionPerformed(null);
    }//GEN-LAST:event_dropStudentSubmitButtonActionPerformed

    private void studentDropClassSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentDropClassSubmitButtonActionPerformed
        // TODO add your handling code here:
        studentDropClassStatusTextArea.setText("");
        String StuInfo = studentDropClassChooseStudentComboBox.getSelectedItem().toString();
        String[] Stu = StuInfo.split(" ");
        String studentName = Stu[0] + " " + Stu[1];
        String studentID = Stu[2];
        String dropClass = (String)studentDropClassChooseClassComboBox.getSelectedItem();
        
        ScheduleQueries.dropStudentScheduleByCourse(currentSemester, studentID, dropClass);
        studentDropClassStatusTextArea.append(studentName + " has been dropped from " + dropClass + "\n");
        ArrayList<ScheduleEntry> waitlistedStudents = ScheduleQueries.getWaitlistedStudentsByClass(currentSemester, dropClass);
        
        if (!waitlistedStudents.isEmpty())
        {
            ScheduleQueries.updateScheduleEntry(waitlistedStudents.get(0));
            studentDropClassStatusTextArea.append(StudentQueries.getStudent(waitlistedStudents.get(0).getStudentID()).lastFirstName() + " has been scheduled into " + dropClass + "\n");
        }
        displayScheduleDisplayButtonActionPerformed(null);
        displayClassListDisplayButtonActionPerformed(null);
    }//GEN-LAST:event_studentDropClassSubmitButtonActionPerformed

    private void adminDropClassSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adminDropClassSubmitButtonActionPerformed
        // TODO add your handling code here:
        adminDropClassResultTextArea.setText("");
        String scheduledStudents = "Scheduled students dropped from the course:\n";
        String waitlistedStudents = "Waitlisted students dropped from the course:\n";
        StudentEntry currStudent;
        for (ScheduleEntry currentEntry : ScheduleQueries.getScheduledStudentsByClass(currentSemester, (String)adminDropClassChooseComboBox.getSelectedItem()))
        {
            currStudent = StudentQueries.getStudent(currentEntry.getStudentID());
            scheduledStudents += currStudent.getLastName() + ", " + currStudent.getFirstName() + " " + currStudent.getStudentID() + "\n"; 
        }
        for (ScheduleEntry currentEntry : ScheduleQueries.getWaitlistedStudentsByClass(currentSemester, (String)adminDropClassChooseComboBox.getSelectedItem()))
        {
            currStudent = StudentQueries.getStudent(currentEntry.getStudentID());
            waitlistedStudents += currStudent.getLastName() + ", " + currStudent.getFirstName() + " " + currStudent.getStudentID() + "\n"; 
        }

        adminDropClassResultTextArea.append(scheduledStudents + "\n");
        adminDropClassResultTextArea.append(waitlistedStudents);
        ScheduleQueries.dropScheduleByCourse(currentSemester, (String)adminDropClassChooseComboBox.getSelectedItem());
        ClassQueries.dropClass(currentSemester, (String)adminDropClassChooseComboBox.getSelectedItem());
        rebuildClassComboBoxes();
        displayClassListDisplayButtonActionPerformed(null);
    }//GEN-LAST:event_adminDropClassSubmitButtonActionPerformed

    private void dispalyChooseClassComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dispalyChooseClassComboBoxActionPerformed
        // TODO add your handling code here:
        displayClassListDisplayButtonActionPerformed(null);
    }//GEN-LAST:event_dispalyChooseClassComboBoxActionPerformed

    private void checkData() {
        try {
            FileReader reader = new FileReader("xzq789yy.txt");
            BufferedReader breader = new BufferedReader(reader);

            String encodedAuthor = breader.readLine();
            String encodedProject = breader.readLine();
            byte[] decodedAuthor = Base64.getDecoder().decode(encodedAuthor);
            author = new String(decodedAuthor);
            byte[] decodedProject = Base64.getDecoder().decode(encodedProject);
            project = new String(decodedProject);
            reader.close();

        } catch (FileNotFoundException e) {
            //get user info and create file
            author = JOptionPane.showInputDialog("Enter your first and last name.");
            project = "Course Scheduler Fall 2023";

            //write data to the data file.
            try {
                FileWriter writer = new FileWriter("xzq789yy.txt", true);
                BufferedWriter bufferedWriter = new BufferedWriter(writer);

                // encode the output data.
                String encodedAuthor = Base64.getEncoder().encodeToString(author.getBytes());

                bufferedWriter.write(encodedAuthor);
                bufferedWriter.newLine();

                String encodedProject = Base64.getEncoder().encodeToString(project.getBytes());
                bufferedWriter.write(encodedProject);

                bufferedWriter.close();
            } catch (IOException ioe) {
                ioe.printStackTrace();
                System.exit(1);
            }

        } catch (IOException e) {
            e.printStackTrace();
            System.exit(1);
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aboutButton;
    private javax.swing.JLabel addClassAddedLabel;
    private javax.swing.JLabel addClassCodeLabel;
    private javax.swing.JPanel addClassPanel;
    private javax.swing.JLabel addClassSeatsLabel;
    private javax.swing.JButton addClassSubmitButton;
    private javax.swing.JComboBox<String> addCourseCodeComboBox;
    private javax.swing.JLabel addCourseCodeLabel;
    private javax.swing.JTextField addCourseCodeTextfield;
    private javax.swing.JLabel addCourseDescriptionLabel;
    private javax.swing.JTextField addCourseDescriptionTextfield;
    private javax.swing.JPanel addCoursePanel;
    private javax.swing.JLabel addCourseStatusLabel;
    private javax.swing.JButton addCourseSubmitButton;
    private javax.swing.JLabel addFirstNameLabel;
    private javax.swing.JTextField addFirstNameTextfield;
    private javax.swing.JLabel addLastNameLabel;
    private javax.swing.JTextField addLastNameTextfield;
    private javax.swing.JLabel addScheduleClassScheduledLabel;
    private javax.swing.JButton addScheduleClassSubmitButton;
    private javax.swing.JSpinner addSeatsSpinner;
    private javax.swing.JComboBox<String> addSelectClassComboBox;
    private javax.swing.JLabel addSelectClassLabel;
    private javax.swing.JComboBox<String> addSelectStudentComboBox;
    private javax.swing.JLabel addSelectStudentLabel;
    private javax.swing.JLabel addSemesterLabel;
    private javax.swing.JPanel addSemesterPanel;
    private javax.swing.JLabel addSemesterStatusLabel;
    private javax.swing.JButton addSemesterSubmitButton;
    private javax.swing.JTextField addSemesterTextfield;
    private javax.swing.JLabel addStudentIDLabel;
    private javax.swing.JTextField addStudentIDTextfield;
    private javax.swing.JPanel addStudentPanel;
    private javax.swing.JLabel addStudentStatusLabel;
    private javax.swing.JButton addStudentSubmitButton;
    private javax.swing.JComboBox<String> adminDropClassChooseComboBox;
    private javax.swing.JLabel adminDropClassChooseLabel;
    private javax.swing.JTextArea adminDropClassResultTextArea;
    private javax.swing.JButton adminDropClassSubmitButton;
    private javax.swing.JPanel adminPanel;
    private javax.swing.JTabbedPane adminTabbedPane;
    private javax.swing.JButton changeSemesterButton;
    private javax.swing.JLabel chooseClassLabel;
    private javax.swing.JLabel currentSemesterArea;
    private javax.swing.JComboBox<String> currentSemesterComboBox;
    private javax.swing.JLabel currentSemesterLabel;
    private javax.swing.JComboBox<String> dispalyChooseClassComboBox;
    private javax.swing.JButton displayClassDisplayButton;
    private javax.swing.JButton displayClassListDisplayButton;
    private javax.swing.JPanel displayClassListPanel;
    private javax.swing.JPanel displayClassesPanel;
    private javax.swing.JTable displayCourseStatusTable;
    private javax.swing.JTable displayCoursesTable;
    private javax.swing.JTextArea displayCoursesTextarea;
    private javax.swing.JButton displayScheduleDisplayButton;
    private javax.swing.JTextArea displayStudentCoursesTextarea;
    private javax.swing.JPanel displayStudentSchedulePanel;
    private javax.swing.JComboBox<String> dropChooseStudentComboBox;
    private javax.swing.JLabel dropChooseStudentLabel;
    private javax.swing.JPanel dropClassPanel;
    private javax.swing.JPanel dropStudentPanel;
    private javax.swing.JTextArea dropStudentResultTextArea;
    private javax.swing.JButton dropStudentSubmitButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel scheduleClassPanel;
    private javax.swing.JLabel scheduledStudentInClassLabel;
    private javax.swing.JTable scheduledStudentsClassTable;
    private javax.swing.JComboBox<String> selectStudentComboBox;
    private javax.swing.JLabel selectStudentLabel;
    private javax.swing.JComboBox<String> studentDropClassChooseClassComboBox;
    private javax.swing.JLabel studentDropClassChooseClassPanel;
    private javax.swing.JComboBox<String> studentDropClassChooseStudentComboBox;
    private javax.swing.JLabel studentDropClassChooseStudentPanel;
    private javax.swing.JTabbedPane studentDropClassPanel;
    private javax.swing.JTextArea studentDropClassStatusTextArea;
    private javax.swing.JButton studentDropClassSubmitButton;
    private javax.swing.JPanel studentPanel;
    private javax.swing.JTable waitlistedStudentInWaitlistOrderTable;
    private javax.swing.JLabel waitlistedStudentsClassLabel;
    // End of variables declaration//GEN-END:variables

    private String[] studentNamesCB(JComboBox<String> dropChooseStudentComboBox) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
